@page "/search"
@inject HttpClient Http

<h3>SearchPage</h3>

<div class="row">
<div class="col-md-6">
    <InputText @bind-Value="query" class="form-control"/>
</div>
    <div class="col-md-6">
        <button class="btn btn-primary" @onclick="OnClickStartWith">Starter med</button>
        <button class="btn btn-primary" @onclick="OnClickContains">Indeholder</button>
    </div>
</div>
@if (viewWords != null)
{
    <ul>
    @foreach (var w in viewWords)
    {
        <li>@w</li>
    }
    </ul>
}
else
{
    <p>waiting for words to be loaded...</p>
}
@code {
    string[]? allWords;

    string[]? viewWords;

    string query;

    protected override async Task OnInitializedAsync()
    {
        allWords = await LoadAllWords();
        viewWords = allWords.Take(10).ToArray();
    }

    private async Task<string[]> LoadAllWords()
    {
        var content = await Http.GetStringAsync("sample-data/words.txt");
        return content.Split("\n");
    }

    private void OnClickStartWith()
    {
        List<string> result = new();
        foreach (string w in allWords)
        {
            if (w.StartsWith(query))
                result.Add(w);
        }
        viewWords = result.ToArray();
    }

    private void OnClickContains()
    {
        viewWords = allWords.Where((w) => w.Contains(query)).ToArray();
    }

}